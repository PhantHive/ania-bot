name: Discord Ania Bot Deploy

on:
  push:
    tags:
      - 'v*' # Trigger the workflow on tags starting with 'v'

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.1

      - name: Install dependencies
        run: npm install

      - name: Execute deploy script
        run: sh deployPrivateFiles.sh

      - name: Copy assets
        run: npm run copy:assets

      - name: Build
        run: npm run build

      - name: Package only the dist folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

      # Removed the "Deploy to server" step here
      # This step will only package the dist folder and not execute any commands on the remote server

      - name: Stop bot with pm2 if running on the remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH }}
          port: ${{ secrets.PROD_SERVER_PORT }}
          script: |
            # Stop the bot using PM2 on the remote server
            pm2 stop ania || true

      - name: Start bot with pm2 on the remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH }}
          port: ${{ secrets.PROD_SERVER_PORT }}
          script: |
            # Start the bot using PM2 on the remote server
            pm2 start dist/index.js --name ania-bot

      - name: Save pm2 process list on the remote server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_SERVER_USER }}
          key: ${{ secrets.PROD_SERVER_SSH }}
          port: ${{ secrets.PROD_SERVER_PORT }}
          script: |
            # Save the PM2 process list on the remote server
            pm2 save
